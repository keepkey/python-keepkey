version: 2          # keep 2.0 syntax; CircleCI 2.1 also works

jobs:
  emulator-build-test:
    docker:
      - image: circleci/python:3.7      # upgrade to cimg/python:3.12 if you like
    steps:
      # ────────────────────────────────────────────────────────────────
      # 1) Pull python-keepkey via HTTPS so no SSH key is required
      # ────────────────────────────────────────────────────────────────
      - run:
          name: Clone python-keepkey
          command: git clone --depth 1 https://github.com/keepkey/python-keepkey.git .pykk

      # ────────────────────────────────────────────────────────────────
      # 2) Grab firmware repo and inject our fresh python-keepkey copy
      # ────────────────────────────────────────────────────────────────
      - run:
          name: Checkout firmware & inject python-keepkey
          command: |
            # Ensure all submodule URLs fall back to HTTPS
            git config --global url."https://github.com/".insteadOf git@github.com:
            git config --global url."https://".insteadOf git://

            # Move python-keepkey out of the way for the moment
            mv .pykk ../

            # Clone firmware repository (expects $FIRMWARE_REPO env var)
            git clone --depth 1 -b master "$FIRMWARE_REPO" .

            # Initialise firmware submodules
            git submodule update --init --recursive

            # Replace the vendor copy with our freshly–cloned python-keepkey
            rm -rf deps/python-keepkey
            mv ../.pykk deps/python-keepkey

            # Pull python-keepkey submodules too
            cd deps/python-keepkey
            git submodule update --init --recursive
            cd ../../..

      # ────────────────────────────────────────────────────────────────
      # 3) Build the Docker-based emulator tests
      # ────────────────────────────────────────────────────────────────
      - setup_remote_docker

      - run:
          name: Emulator tests
          command: |
            pushd ./scripts/emulator
            set +e                                   # don’t exit on first failure
            docker-compose up --build firmware-unit
            docker-compose up --build python-keepkey
            set -e

            # Collect JUnit / pytest XML results
            mkdir -p ../../test-reports
            docker cp "$(docker-compose ps -q firmware-unit)":/kkemu/test-reports/. ../../test-reports/
            docker cp "$(docker-compose ps -q python-keepkey)":/kkemu/test-reports/. ../../test-reports/
            popd

            # Fail job if either container reported non-zero status
            [ "$(cat test-reports/python-keepkey/status)$(cat test-reports/firmware-unit/status)" = "00" ] || exit 1

      - store_test_results:
          path: test-reports

# ──────────────────────────────────────────────────────────────────────
workflows:
  version: 2
  emulator:
    jobs:
      - emulator-build-test
